---@class item_yunshizhaohuan: eom_ability
item_yunshizhaohuan = class({})
function item_yunshizhaohuan:OnSpellStart()
	local hCaster = self:GetCaster()
	local vPosition = self:GetCursorPosition()
	hCaster:EmitSound("Hero_Invoker.ChaosMeteor.Loop")
	local iParticleID = ParticleManager:CreateParticle("particles/units/heroes/hero_invoker/invoker_chaos_meteor_fly.vpcf", PATTACH_CUSTOMORIGIN, nil)
	ParticleManager:SetParticleControl(iParticleID, 0, hCaster:GetAbsOrigin() + Vector(0, 0, 1000))
	ParticleManager:SetParticleControl(iParticleID, 1, vPosition)
	ParticleManager:SetParticleControl(iParticleID, 2, Vector(1.3, 0, 0))
	ParticleManager:ReleaseParticleIndex(iParticleID)
	hCaster:GameTimer(1.3, function()
		local iParticleID = ParticleManager:CreateParticle("particles/units/heroes/hero_warlock/warlock_rain_of_chaos_start.vpcf", PATTACH_CUSTOMORIGIN, nil)
		ParticleManager:SetParticleControl(iParticleID, 0, vPosition)
		ParticleManager:SetParticleControl(iParticleID, 1, vPosition)
		ParticleManager:SetParticleControl(iParticleID, 2, vPosition)
		hCaster:EmitSound("Hero_Warlock.RainOfChaos_buildup")
		hCaster:StopSound("Hero_Invoker.ChaosMeteor.Loop")
	end)
	hCaster:GameTimer(1.5, function()
		local iParticleID = ParticleManager:CreateParticle("particles/units/heroes/hero_warlock/warlock_rain_of_chaos.vpcf", PATTACH_CUSTOMORIGIN, nil)
		ParticleManager:SetParticleControl(iParticleID, 0, vPosition)
		ParticleManager:SetParticleControl(iParticleID, 1, vPosition)
		ParticleManager:SetParticleControl(iParticleID, 2, vPosition)
		ParticleManager:SetParticleControl(iParticleID, 5, vPosition)
		hCaster:EmitSound("Hero_Warlock.RainOfChaos")
		hCaster:EmitSound("Hero_Invoker.ChaosMeteor.Impact")
		local hUnit = CreateUnitByNameWithNewData("boss_chaos_demon_" .. RandomInt(1, 6), vPosition, true, nil, nil, DOTA_TEAM_BADGUYS, {})
		hUnit:SetForwardVector(RandomVector(1))
		local tTargets = FindUnitsInRadius(DOTA_TEAM_BADGUYS, vPosition, nil, 900, DOTA_UNIT_TARGET_TEAM_ENEMY, DOTA_UNIT_TARGET_BASIC + DOTA_UNIT_TARGET_HERO, DOTA_UNIT_TARGET_FLAG_NONE, FIND_ANY_ORDER, false)
		hUnit:DealDamage(tTargets, nil, 20000, DAMAGE_TYPE_PURE)
	end)
	self:Remove()
end